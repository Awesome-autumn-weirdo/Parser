//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lexer.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Lexer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap icons8_вопрос_50 {
            get {
                object obj = ResourceManager.GetObject("icons8-вопрос-50", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap icons8_вставить_50 {
            get {
                object obj = ResourceManager.GetObject("icons8-вставить-50", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap icons8_дискета_50 {
            get {
                object obj = ResourceManager.GetObject("icons8-дискета-50", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap icons8_добавить_64 {
            get {
                object obj = ResourceManager.GetObject("icons8-добавить-64", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap icons8_информация_50 {
            get {
                object obj = ResourceManager.GetObject("icons8-информация-50", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap icons8_кнопка_выключения_питания_50 {
            get {
                object obj = ResourceManager.GetObject("icons8-кнопка-выключения-питания-50", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap icons8_ножницы_60 {
            get {
                object obj = ResourceManager.GetObject("icons8-ножницы-60", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap icons8_папка_96 {
            get {
                object obj = ResourceManager.GetObject("icons8-папка-96", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap icons8_скопировать_60 {
            get {
                object obj = ResourceManager.GetObject("icons8-скопировать-60", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap icons8_стрелка_50 {
            get {
                object obj = ResourceManager.GetObject("icons8-стрелка-50", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap icons8_стрелка_назад {
            get {
                object obj = ResourceManager.GetObject("icons8-стрелка назад", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap test1 {
            get {
                object obj = ResourceManager.GetObject("test1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap test2 {
            get {
                object obj = ResourceManager.GetObject("test2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap test3 {
            get {
                object obj = ResourceManager.GetObject("test3", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;ru&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
        ///    &lt;title&gt;Грамматика записей в Pascal&lt;/title&gt;
        ///    &lt;style&gt;
        ///        body {
        ///            font-family: &apos;Courier New&apos;, monospace;
        ///            line-height: 1.6;
        ///            margin: 20px;
        ///            max-width: 900px;
        ///        }
        ///        h1 {
        ///            color: #2c3e50;
        ///            border-bottom: 1px solid #eee;
        ///            padding-bottom: 10px;
        ///        }
        ///    [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Грамматика {
            get {
                return ResourceManager.GetString("Грамматика", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;en&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
        ///    &lt;title&gt;Scanner.cs - Lexical Analyzer&lt;/title&gt;
        ///    &lt;style&gt;
        ///        body {
        ///            font-family: &apos;Consolas&apos;, &apos;Courier New&apos;, monospace;
        ///            background-color: #f5f5f5;
        ///            margin: 0;
        ///            padding: 20px;
        ///        }
        ///        .code-container {
        ///            background-color: #ffffff;
        ///            border-radius: 5px;
        ///            padding [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Исходный_код {
            get {
                return ResourceManager.GetString("Исходный_код", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;ru&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
        ///    &lt;title&gt;Анализ автоматной грамматики&lt;/title&gt;
        ///    &lt;style&gt;
        ///        body {
        ///            font-family: &apos;Segoe UI&apos;, Tahoma, Geneva, Verdana, sans-serif;
        ///            line-height: 1.6;
        ///            margin: 20px;
        ///            max-width: 900px;
        ///            color: #333;
        ///        }
        ///        h1 {
        ///            color: #2c3e50;
        ///            border-bottom: 2px solid #3498d [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Классификация {
            get {
                return ResourceManager.GetString("Классификация", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;ru&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
        ///    &lt;title&gt;Диаграмма состояний грамматики G[OPR]&lt;/title&gt;
        ///    &lt;style&gt;
        ///        body {
        ///            font-family: &apos;Segoe UI&apos;, Tahoma, Geneva, Verdana, sans-serif;
        ///            line-height: 1.6;
        ///            margin: 20px;
        ///            max-width: 1000px;
        ///            color: #333;
        ///        }
        ///        h1 {
        ///            color: #2c3e50;
        ///            border-bottom: 2px so [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Методы_анализа {
            get {
                return ResourceManager.GetString("Методы_анализа", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;ru&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
        ///    &lt;title&gt;Записи в Pascal&lt;/title&gt;
        ///    &lt;style&gt;
        ///        body {
        ///            font-family: Arial, sans-serif;
        ///            line-height: 1.6;
        ///            margin: 20px;
        ///            max-width: 800px;
        ///        }
        ///        h1 {
        ///            color: #2c3e50;
        ///        }
        ///        code {
        ///            background-color: #f4f4f4;
        ///            padding: 2px 5px;
        ///            bo [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Постановка_задачи {
            get {
                return ResourceManager.GetString("Постановка_задачи", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;ru&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
        ///    &lt;title&gt;Список использованных источников&lt;/title&gt;
        ///    &lt;style&gt;
        ///        body {
        ///            font-family: &apos;Times New Roman&apos;, Times, serif;
        ///            line-height: 1.5;
        ///            margin: 40px;
        ///            max-width: 800px;
        ///        }
        ///        h1 {
        ///            text-align: center;
        ///            font-size: 16pt;
        ///            margin-bottom: 30px;
        ///            f [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Список_литературы {
            get {
                return ResourceManager.GetString("Список_литературы", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;ru&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
        ///    &lt;title&gt;Руководство пользователя&lt;/title&gt;
        ///    &lt;style&gt;
        ///        body {
        ///            font-family: Arial, sans-serif;
        ///            line-height: 1.6;
        ///            background-color: #f4f4f4;
        ///            margin: 0;
        ///            padding: 20px;
        ///        }
        ///        .container {
        ///            max-width: 800px;
        ///            background: white;
        ///            padding: 20px;
        ///            borde [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Справка {
            get {
                return ResourceManager.GetString("Справка", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;ru&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
        ///    &lt;title&gt;Тестовые примеры лексического анализатора&lt;/title&gt;
        ///    &lt;style&gt;
        ///        body {
        ///            font-family: &apos;Segoe UI&apos;, Tahoma, Geneva, Verdana, sans-serif;
        ///            line-height: 1.6;
        ///            margin: 20px;
        ///            max-width: 1000px;
        ///            color: #333;
        ///        }
        ///        h1 {
        ///            color: #2c3e50;
        ///            border-bottom: 2p [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Тестовый_пример {
            get {
                return ResourceManager.GetString("Тестовый_пример", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ТфякСхема {
            get {
                object obj = ResourceManager.GetObject("ТфякСхема", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
